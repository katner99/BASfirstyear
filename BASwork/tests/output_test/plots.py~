###################################################
# script to produce controur plots to compare data
# between two datasets
# created by Katherine Turner based on hovmoller.py
# script 
# 23 November 2022
###################################################
import matplotlib
matplotlib.use('Agg')
import matplotlib.pyplot as plt
import numpy as np
import sys
import datetime
import netCDF4 as nc


def contourplots (lon, lat, data1, data2, title, year):

    x = lon
    y = lat
    z1 = data1
    z2 = data2

    # create a 2D grid
    [X, Y] = np.meshgrid(lon, lat)

    fig =  plt.figure(figsize=(15,5))

    # plot contour lines
    plt.subplot(1,2,1) 
    cs = plt.contourf(X, Y, z1[0,:,:]-z2[0,:,:], levels=np.linspace(-0.5,0.5,10), cmap = "BrBG")
    plt.colorbar(cs)
    #ax.set_ylim(-1100,0)
    plt.title(title+" January")
    plt.xlabel('Longitude')
    plt.ylabel('Latitude')

    plt.subplot(1,2,2) 
    cs = plt.contourf(X, Y, z1[9,:,:]-z2[9,:,:], levels=np.linspace(-0.5,0.5,10), cmap = "BrBG")
    plt.colorbar(cs)
    #ax.set_ylim(-1100,0)
    plt.title(title+" October")
    plt.xlabel('Longitude')
    plt.ylabel('Latitude')

    fig.savefig("cont"+year+".png")

def make_timeseries_at_point (time, data1, data2, data3, data4, title1, title2, year):

    fig =  plt.figure(figsize=(12,10))

    x = time
    y = data1
    z = data2
    i = data3
    j = data4
    labels = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec']

    plt.subplot(2,2,1)
    plt.plot(x, y, color='green', linewidth = 2)
    plt.plot(x, z, color='red', linewidth = 2)
    plt.xticks(x, labels,rotation=45)
    plt.title(title1)

    plt.subplot(2,2,3)
    plt.plot(x, y-z, color='black', linewidth = 2)
    plt.xticks(x, labels,rotation=45)
    plt.title("Difference between the two outputs")

    plt.subplot(2,2,2)
    plt.plot(x, i, color='blue', linewidth = 2)
    plt.plot(x, j, color='pink', linewidth = 2)
    plt.xticks(x, labels,rotation=45)
    plt.title(title1)

    plt.subplot(2,2,4)
    plt.plot(x, i-j, color='black', linewidth = 2)
    plt.xticks(x, labels,rotation=45)
    plt.title(title2)
   
    fig.tight_layout(pad=2.0)

    fig.savefig("temp"+year+".png")


if __name__ == "__main__":
    year = str(sys.argv[1])
    filepathnew="/data/oceans_output/shelf/katner33/output_trial_run/PAS_test2/output/"+year+"01/MITgcm/"
    filepathold="/data/oceans_output/shelf/kaight/archer2_mitgcm/PAS_LENS001_O/output/"+year+"01/MITgcm/"
    #filepathold="/data/oceans_output/shelf/katner33/output_trial_run/PAS_test/output/"+year+"01/MITgcm/"
    filename="output.nc"
    idnew = nc.Dataset(filepathnew+filename, 'r')
    saltnew = idnew.variables["SALT"][:,7,:,:]
    thetanew = idnew.variables["THETA"][:,0,380,590] 
    lat = idnew.variables["YC"][:]  # latitude = -62.53
    lon = idnew.variables["XC"][:] # longitude = 279.05
    time = idnew.variables["time"][:]
    idold = nc.Dataset(filepathold+filename, 'r')
    saltold = idold.variables["SALT"][:,7,:,:]
    thetaold = idold.variables["THETA"][:,0,380,590]
    #z =  idnew.variables["Z"][:]
    #print(z[10])
    #print(datanew,dataold,lon,lat,time)
    print(np.shape(saltold))
    
    contourplots(lon,lat,saltold,saltnew,"Difference in Salinity between the two runs for "+year, year)
    make_timeseries_at_point(time, thetaold, thetanew, saltold[:,380,590], saltnew[:,380,590], "Potential surface temperature at 62째S 100째W in "+year, "Salinity at 62째S 100째W in "+year, year)
    make_timeseries_over_area


